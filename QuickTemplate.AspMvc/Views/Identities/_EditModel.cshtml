@*@BaseCode*@
@*#if ACCOUNT_ON*@@*
@model QuickTemplate.AspMvc.Models.Account.Identity
<style>
    .row {
        margin-top: 2px;
        margin-bottom: 2px;
    }

    h3 {
        margin-top: 20px;
    }
</style>

<div class="row">
    <div class="col-md-4">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input asp-for="Id" type="hidden" />
        @if (Model.IsIdDefault == false)
        {
            <div class="form-group">
                <label asp-for="Guid" class="control-label"></label>
                <input asp-for="Guid" class="form-control" readonly="readonly" />
            </div>
        }
        <div class="form-group">
            <label asp-for="Name" class="control-label"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Email" class="control-label"></label>
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="TimeOutInMinutes" class="control-label"></label>
            <input asp-for="TimeOutInMinutes" class="form-control" />
            <span asp-validation-for="TimeOutInMinutes" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="AccessFailedCount" class="control-label"></label>
            <input asp-for="AccessFailedCount" class="form-control" />
            <span asp-validation-for="AccessFailedCount" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="State" class="control-label"></label>
            @{
                var valuesState = Enum.GetValues(typeof(QuickTemplate.Logic.Modules.Common.State)).Cast<QuickTemplate.Logic.Modules.Common.State>().Select(e => new SelectListItem(e.ToString(), e.ToString()));
            }
            @Html.DropDownListFor(m => m.State, valuesState, null, new { @class = "form-select" })
            <span asp-validation-for="State" class="text-danger"></span>
        </div>
    </div>
</div>

<h3>Access roles</h3>

@if (Model.IsIdDefault == false)
{
    <hr />
    @foreach (var item in Model.IdentityRoles.OrderBy(e => e.Designation))
    {
        var parms = new Dictionary<string, string>
        {
            { "id", Model.Id.ToString() },
            { "accessRoleId", item.Id.ToString() }
        };
        <div class="btn-group" style="margin-bottom: 1.0em; margin-right: 1.0em; min-width: 15em;">
            <a href="#" class="btn btn-outline-primary"><i class="fa-regular fa-hand-point-right"></i></a>
            <a href="#" class="btn btn-outline-primary">@item.Designation</a>
            <a asp-action="RemoveAccessRole" asp-all-route-data="parms" class="btn btn-primary"><i class="fa fa-times"></i></a>
        </div>
    }
    if (Model.AddIdentityRoleList.Any())
    {
        <div class="row">
            <div class="col-md-4">
                <div class="btn-group" style="min-width: 13em;">
                    <button type="button" class="btn btn-primary" style="min-width: 100%;">Add access role</button>
                    <button type="button" class="btn btn-outline-primary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
                        <span class="visually-hidden">Toggle Dropdown</span>
                    </button>
                    <ul class="dropdown-menu">
                        @foreach (var item in Model.AddIdentityRoleList)
                        {
                            <li>@Html.ActionLink(item.Designation, "AddAccessRole", null, new {id=Model.Id, accessRoleId=item.Id}, new { @class="dropdown-item"})</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
    <hr />
}
*@@*#endif*@
