@*@BaseCode*@
@*#if ACCOUNT_ON*@@*
@{
    @using Microsoft.AspNetCore.Mvc.Rendering
    @using QuickTemplate.AspMvc.Modules.Session

    var sessionInfo = new SessionWrapper(Context.Session);
    var mnoLogon = ("Logon");
    var mnuLogout = ("Logout");
    var mnuIdentities = ("Identities");
    var mnuIdentityUsers = ("Identity-Users");
    var mnuIdentityRoles = ("Identity-Roles");
    var mnuPwdChange = ("Change password");
    var mnuPwdReset = ("Reset password");
    var mnuUser = string.Empty;

#if ACCESSRULES_ON
    var mnuAccessRules = ("Access-Rules");
#endif

    if (sessionInfo.IsAuthenticated)
    {
        mnuUser = sessionInfo.LoginSession?.Name;
    }

    @if (sessionInfo.IsAuthenticated && sessionInfo.IsSessionAlive)
    {
        using (Html.BeginForm("Logout", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
        {
            @Html.AntiForgeryToken()
            <ul class="nav navbar-nav navbar-right">
                <li class="dropdown">
                    <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="loginMenu" data-bs-toggle="dropdown" aria-expanded="false">
                        @mnuUser
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="loginMenu">
                        @if (sessionInfo.HasRole(QuickTemplate.Logic.StaticLiterals.RoleSysAdmin) == true)
                        {
                            <li class="dropdown-item">@Html.ActionLink(mnuIdentities, "Index", "Identities", routeValues: null, htmlAttributes: null)</li>
                            <li class="dropdown-item">@Html.ActionLink(mnuIdentityUsers, "Index", "IdentityUsers", routeValues: null, htmlAttributes: null)</li>
                            <li class="dropdown-item">@Html.ActionLink(mnuIdentityRoles, "Index", "IdentityRoles", routeValues: null, htmlAttributes: null)</li>
#if ACCESSRULES_ON
                            <li class="dropdown-item">@Html.ActionLink(mnuAccessRules, "Index", "AccessRules", routeValues: null, htmlAttributes: new { title = "Manage" })</li>
#endif
                            <li class="dropdown-item">@Html.ActionLink(mnuPwdChange, "ChangePassword", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })</li>
                            <li class="dropdown-item">@Html.ActionLink(mnuPwdReset, "ResetPassword", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })</li>
                        }
                        else if (sessionInfo.HasRole(QuickTemplate.Logic.StaticLiterals.RoleAppAdmin) == true)
                        {
                            <li class="dropdown-item">@Html.ActionLink(mnuIdentities, "Index", "Identities", routeValues: null, htmlAttributes: null)</li>
                            <li class="dropdown-item">@Html.ActionLink(mnuIdentityUsers, "Index", "IdentityUsers", routeValues: null, htmlAttributes: null)</li>
                            <li class="dropdown-item">@Html.ActionLink(mnuIdentityRoles, "Index", "IdentityRoles", routeValues: null, htmlAttributes: null)</li>
#if ACCESSRULES_ON
                            <li class="dropdown-item">@Html.ActionLink(mnuAccessRules, "Index", "AccessRules", routeValues: null, htmlAttributes: new { title = "Manage" })</li>
#endif
                            <li class="dropdown-item">@Html.ActionLink(mnuPwdChange, "ChangePassword", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })</li>
                            <li class="dropdown-item">@Html.ActionLink(mnuPwdReset, "ResetPassword", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })</li>
                        }
                        else
                        {
                            <li class="dropdown-item">@Html.ActionLink(mnuPwdChange, "ChangePassword", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })</li>
                        }
                        <li class="dropdown-item"><a href="javascript:document.getElementById('logoutForm').submit()">@mnuLogout<i style="margin-left: 1em;" class="fas fa-sign-out-alt"></i></a></li>
                    </ul>
                </li>
            </ul>
        }
    }
    else
    {
        <ul class="nav navbar-nav navbar-right">
            <li>@Html.ActionLink(mnoLogon, "Logon", "Account", routeValues: null, htmlAttributes: new { id = "loginLink", @class="btn btn-outline-secondary" })</li>
        </ul>
    }
}
*@@*#endif*@
